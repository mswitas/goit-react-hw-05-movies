{"version":3,"file":"static/js/779.489098d9.chunk.js","mappings":"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","sources":["hooks/useFetch.js","webpack://react-homework-template/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","pages/MovieDetails.jsx","services/theMoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nexport const useFetch = (fetchAPI, param) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n            fetchAPI(param)\n                .then((response) => {\n                    setData(response.data);\n                })\n                .catch((err) => {\n                    setError(err);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n    }, [fetchAPI, param]);\n\n    return { data, isLoading, error };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Movie\":\"Movie_Movie__PhHXG\",\"goBackLink\":\"Movie_goBackLink__nz52T\",\"goBackBtn\":\"Movie_goBackBtn__4CdNf\",\"arrow\":\"Movie_arrow__xG3Am\",\"mainInfoWrapper\":\"Movie_mainInfoWrapper__RbRRp\",\"genresList\":\"Movie_genresList__M2uCf\",\"additionalInfoMenu\":\"Movie_additionalInfoMenu__-j6+8\",\"additionalInfo\":\"Movie_additionalInfo__IfXXZ\"};","import PropTypes from \"prop-types\"\nimport React, { Suspense, useState } from \"react\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport css from \"./Movie.module.css\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const Movie = ({ movie }) => {\n    const path = `https://image.tmdb.org/t/p/w342${movie.poster_path}`;\n    const location = useLocation();\n    const [backLinkHref] = useState(location.state?.from ?? \"/\");\n\n    return (\n        <div className={css.Movie}>\n            <Link\n                to={backLinkHref}\n                className={css.goBackLink}\n            ><button className={css.goBackBtn}><i className={css.arrow} /><span>Go back</span></button></Link>\n            <div className={css.mainInfoWrapper}>\n                <img src={path} width=\"342\" alt={movie.title} />\n                <div className={css.mainInfo}>\n                    <h1>{movie.title} ({movie.release_date.slice(0, 4)})</h1>\n                    <p>User score: {movie.vote_average}</p>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <ul className={css.genresList}>\n                        {movie.genres.map(genre => {\n                            return (\n                                <li key={genre.id}>{genre.name}</li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <div>\n                <hr />\n                <div className={css.additionalInfoMenu}>\n                    <p>Additional information</p>\n                    <ul>\n                        <li><Link to=\"cast\">Cast</Link></li>\n                        <li><Link to=\"reviews\">Reviews</Link></li>\n                    </ul>\n                </div>\n                <hr />\n            </div>\n            <div className={css.additionalInfo}>\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n  movie: PropTypes.object.isRequired,\n}\n","import { Loader } from \"components/Loader/Loader\";\nimport { Movie } from \"components/Movie/Movie\";\nimport { useFetch } from \"hooks/useFetch\"\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"services/theMoviedbAPI\";\n\nconst MovieDetails = () => {\n  const { movieid } = useParams();\n  const { data, isLoading, error } = useFetch(fetchMovieById, movieid);\n\n  if (error) return (<div>{error.message}</div>);\n  \n  return (\n    <>\n      {isLoading && <Loader />}\n      {data && <Movie movie={data} />}\n    </>\n  );\n}\n\nexport default MovieDetails;","import axios from \"axios\"\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\nconst ACCESS_TOKEN = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGJmZTU2ZDg0N2ExYWQwYmIxMDUyODQ3MDZlMzA3MCIsInN1YiI6IjY1Y2Y0ZmJkODczZjAwMDE4YTBkNzgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LyxEDpgpr0aMEr5KqtgGYBHZxsnQxzc-rTD-Lab__Ck\";\n\nconst fetchMovies = async () => {\n    const response = await axios.get(\"3/trending/all/day?language=en-US\", {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMovieById = async (id) => {\n    const url = `3/movie/${id}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchCast = async (id) => {\n    const url = `3/movie/${id}/credits`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchReviews = async (id) => {\n    const url = `3/movie/${id}/reviews`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMoviesByQueryString = async (queryString) => {\n    const url = `3/search/movie?query=${queryString}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nexport {\n    fetchMovies,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews,\n    fetchMoviesByQueryString,\n}\n\n\n"],"names":["useFetch","fetchAPI","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","then","response","catch","err","finally","Movie","_ref","_location$state$from","_location$state","movie","path","concat","poster_path","location","useLocation","state","from","backLinkHref","_jsxs","className","css","children","_jsx","Link","to","src","width","alt","title","release_date","slice","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Loader","Outlet","movieid","useParams","_useFetch","fetchMovieById","message","_Fragment","axios","ACCESS_TOKEN","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","headers","Authorization","sent","abrupt","stop","apply","arguments","_ref2","_callee2","url","_context2","_x","fetchCast","_ref3","_callee3","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQueryString","_ref5","_callee5","queryString","_context5","_x4"],"sourceRoot":""}