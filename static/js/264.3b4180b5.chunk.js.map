{"version":3,"file":"static/js/264.3b4180b5.chunk.js","mappings":"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","sources":["components/CastList/CastList.jsx","components/Cast/Cast.jsx","hooks/useFetch.js","services/theMoviedbAPI.js"],"sourcesContent":["import PropTypes from \"prop-types\"\nexport const CastList = ({cast}) => {\n  return (\n    <div>\n          <ul>\n              {cast.slice(0, 6).map(castMember => {\n                  return (\n                      <li key={castMember.id}>\n                          <img src={`https://image.tmdb.org/t/p/w185/${castMember.profile_path}`} alt={castMember.name} />\n                          <p>{castMember.name}</p>\n                          <p>Character: {castMember.character}</p>\n                      </li>\n                  );\n              })}\n          </ul>      \n    </div>\n  )\n}\n\nCastList.propTypes = {\n  cast: PropTypes.array.isRequired,\n}\n","import { CastList } from 'components/CastList/CastList';\nimport { Loader } from 'components/Loader/Loader';\nimport { useFetch } from 'hooks/useFetch'\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/theMoviedbAPI';\n\nconst Cast = () => {\n  const { movieid } = useParams();\n  const { data, isLoading, error } = useFetch(fetchCast, movieid);\n  \n  if (error) return (<p>{error.message}</p>);\n  \n  return (\n    <div>\n      {isLoading && <Loader />}\n      {data && <CastList cast={data.cast} />}\n    </div>\n  );\n}\n\nexport default Cast;","import { useEffect, useState } from 'react'\n\nexport const useFetch = (fetchAPI, param) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n            fetchAPI(param)\n                .then((response) => {\n                    setData(response.data);\n                })\n                .catch((err) => {\n                    setError(err);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n    }, [fetchAPI, param]);\n\n    return { data, isLoading, error };\n}\n","import axios from \"axios\"\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\nconst ACCESS_TOKEN = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGJmZTU2ZDg0N2ExYWQwYmIxMDUyODQ3MDZlMzA3MCIsInN1YiI6IjY1Y2Y0ZmJkODczZjAwMDE4YTBkNzgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LyxEDpgpr0aMEr5KqtgGYBHZxsnQxzc-rTD-Lab__Ck\";\n\nconst fetchMovies = async () => {\n    const response = await axios.get(\"3/trending/all/day?language=en-US\", {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMovieById = async (id) => {\n    const url = `3/movie/${id}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchCast = async (id) => {\n    const url = `3/movie/${id}/credits`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchReviews = async (id) => {\n    const url = `3/movie/${id}/reviews`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMoviesByQueryString = async (queryString) => {\n    const url = `3/search/movie?query=${queryString}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nexport {\n    fetchMovies,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews,\n    fetchMoviesByQueryString,\n}\n\n\n"],"names":["CastList","_ref","cast","_jsx","children","slice","map","castMember","_jsxs","src","concat","profile_path","alt","name","character","id","movieid","useParams","_useFetch","useFetch","fetchCast","data","isLoading","error","message","Loader","fetchAPI","param","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setIsLoading","_useState5","_useState6","setError","useEffect","then","response","catch","err","finally","axios","ACCESS_TOKEN","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","headers","Authorization","sent","abrupt","stop","apply","arguments","fetchMovieById","_ref2","_callee2","url","_context2","_x","_ref3","_callee3","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQueryString","_ref5","_callee5","queryString","_context5","_x4"],"sourceRoot":""}