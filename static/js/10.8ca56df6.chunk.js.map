{"version":3,"file":"static/js/10.8ca56df6.chunk.js","mappings":"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","sources":["components/NoReviews/NoReviews.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","hooks/useFetch.js","services/theMoviedbAPI.js"],"sourcesContent":["import React from 'react'\n\nexport const NoReviews = () => {\n  return (\n    <div>We don't have any reviews for this movie.</div>\n  )\n}\n","import PropTypes from \"prop-types\"\nimport React from 'react'\n\nexport const ReviewsList = ({reviews}) => {\n  return (\n    <div>\n          <ul>\n            {reviews.map(review => {\n                return (\n                    <li key={review.id}>\n                        <h2>Author: {review.author}</h2>\n                        <p>{review.content}</p>\n                    </li>\n                );    \n            })}\n          </ul>      \n    </div>\n  )\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.array.isRequired,\n}\n","import { Loader } from 'components/Loader/Loader';\nimport { NoReviews } from 'components/NoReviews/NoReviews';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { useFetch } from 'hooks/useFetch';\nimport React from 'react'\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/theMoviedbAPI';\n\nconst Reviews = () => {\n  const { movieid } = useParams();\n  const { data, isLoading, error } = useFetch(fetchReviews, movieid);\n\n  if (error) return (<p>{error.message}</p>);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {data && data?.results.length > 0 && <ReviewsList reviews={data.results} />}\n      {data?.results.length === 0 && <NoReviews />}\n    </div>\n  );\n}\n\nexport default Reviews;","import { useEffect, useState } from 'react'\n\nexport const useFetch = (fetchAPI, param) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n            fetchAPI(param)\n                .then((response) => {\n                    setData(response.data);\n                })\n                .catch((err) => {\n                    setError(err);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n    }, [fetchAPI, param]);\n\n    return { data, isLoading, error };\n}\n","import axios from \"axios\"\n\naxios.defaults.baseURL = \"https://api.themoviedb.org\";\nconst ACCESS_TOKEN = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGJmZTU2ZDg0N2ExYWQwYmIxMDUyODQ3MDZlMzA3MCIsInN1YiI6IjY1Y2Y0ZmJkODczZjAwMDE4YTBkNzgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LyxEDpgpr0aMEr5KqtgGYBHZxsnQxzc-rTD-Lab__Ck\";\n\nconst fetchMovies = async () => {\n    const response = await axios.get(\"3/trending/all/day?language=en-US\", {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMovieById = async (id) => {\n    const url = `3/movie/${id}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchCast = async (id) => {\n    const url = `3/movie/${id}/credits`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchReviews = async (id) => {\n    const url = `3/movie/${id}/reviews`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nconst fetchMoviesByQueryString = async (queryString) => {\n    const url = `3/search/movie?query=${queryString}`;\n    const response = await axios.get(url, {\n        headers: {\n            Authorization: ACCESS_TOKEN,\n        }\n    });\n    return response;\n}\n\nexport {\n    fetchMovies,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews,\n    fetchMoviesByQueryString,\n}\n\n\n"],"names":["NoReviews","_jsx","children","ReviewsList","_ref","reviews","map","review","_jsxs","author","content","id","movieid","useParams","_useFetch","useFetch","fetchReviews","data","isLoading","error","message","Loader","results","length","fetchAPI","param","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setIsLoading","_useState5","_useState6","setError","useEffect","then","response","catch","err","finally","axios","ACCESS_TOKEN","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","headers","Authorization","sent","abrupt","stop","apply","arguments","fetchMovieById","_ref2","_callee2","url","_context2","concat","_x","fetchCast","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMoviesByQueryString","_ref5","_callee5","queryString","_context5","_x4"],"sourceRoot":""}